/*
 * Generated by $(errno -l | gawk -f get-errno-strings.awk)
 */

#include <errno.h>

const char *const *ERRNUM_STRINGS = {
    /* EPERM           */ "Operation not permitted",
    /* ENOENT          */ "No such file or directory",
    /* ESRCH           */ "No such process",
    /* EINTR           */ "Interrupted system call",
    /* EIO             */ "Input/output error",
    /* ENXIO           */ "No such device or address",
    /* BIG             */ "Argument list too long",
    /* ENOEXEC         */ "Exec format error",
    /* EBADF           */ "Bad file descriptor",
    /* ECHILD          */ "No child processes",
    /* EWOULDBLOCK     */ "Resource temporarily unavailable",
    /* ENOMEM          */ "Cannot allocate memory",
    /* EACCES          */ "Permission denied",
    /* EFAULT          */ "Bad address",
    /* ENOTBLK         */ "Block device required",
    /* EBUSY           */ "Device or resource busy",
    /* EEXIST          */ "File exists",
    /* EXDEV           */ "Invalid cross-device link",
    /* ENODEV          */ "No such device",
    /* ENOTDIR         */ "Not a directory",
    /* EISDIR          */ "Is a directory",
    /* EINVAL          */ "Invalid argument",
    /* ENFILE          */ "Too many open files in system",
    /* EMFILE          */ "Too many open files",
    /* ENOTTY          */ "Inappropriate ioctl for device",
    /* ETXTBSY         */ "Text file busy",
    /* EFBIG           */ "File too large",
    /* ENOSPC          */ "No space left on device",
    /* ESPIPE          */ "Illegal seek",
    /* EROFS           */ "Read-only file system",
    /* EMLINK          */ "Too many links",
    /* EPIPE           */ "Broken pipe",
    /* EDOM            */ "Numerical argument out of domain",
    /* ERANGE          */ "Numerical result out of range",
    /* EDEADLOCK       */ "Resource deadlock avoided",
    /* ENAMETOOLONG    */ "File name too long",
    /* ENOLCK          */ "No locks available",
    /* ENOSYS          */ "Function not implemented",
    /* ENOTEMPTY       */ "Directory not empty",
    /* ELOOP           */ "Too many levels of symbolic links",
    /*                 */ "",
    /* ENOMSG          */ "No message of desired type",
    /* EIDRM           */ "Identifier removed",
    /* ECHRNG          */ "Channel number out of range",
    /* NSYNC           */ "Level 2 not synchronized",
    /* HLT             */ "Level 3 halted",
    /* RST             */ "Level 3 reset",
    /* ELNRNG          */ "Link number out of range",
    /* EUNATCH         */ "Protocol driver not attached",
    /* ENOCSI          */ "No CSI structure available",
    /* HLT             */ "Level 2 halted",
    /* EBADE           */ "Invalid exchange",
    /* EBADR           */ "Invalid request descriptor",
    /* EXFULL          */ "Exchange full",
    /* ENOANO          */ "No anode",
    /* EBADRQC         */ "Invalid request code",
    /* EBADSLT         */ "Invalid slot",
    /*                 */ "",
    /* EBFONT          */ "Bad font file format",
    /* ENOSTR          */ "Device not a stream",
    /* ENODATA         */ "No data available",
    /* ETIME           */ "Timer expired",
    /* ENOSR           */ "Out of streams resources",
    /* ENONET          */ "Machine is not on the network",
    /* ENOPKG          */ "Package not installed",
    /* EREMOTE         */ "Object is remote",
    /* ENOLINK         */ "Link has been severed",
    /* EADV            */ "Advertise error",
    /* ESRMNT          */ "Srmount error",
    /* ECOMM           */ "Communication error on send",
    /* EPROTO          */ "Protocol error",
    /* EMULTIHOP       */ "Multihop attempted",
    /* EDOTDOT         */ "RFS specific error",
    /* EBADMSG         */ "Bad message",
    /* EOVERFLOW       */ "Value too large for defined data type",
    /* ENOTUNIQ        */ "Name not unique on network",
    /* EBADFD          */ "File descriptor in bad state",
    /* EREMCHG         */ "Remote address changed",
    /* ELIBACC         */ "Can not access a needed shared library",
    /* ELIBBAD         */ "Accessing a corrupted shared library",
    /* ELIBSCN         */ ".lib section in a.out corrupted",
    /* ELIBMAX         */ "Attempting to link in too many shared libraries",
    /* ELIBEXEC        */ "Cannot exec a shared library directly",
    /* EILSEQ          */ "Invalid or incomplete multibyte or wide character",
    /* ERESTART        */ "Interrupted system call should be restarted",
    /* ESTRPIPE        */ "Streams pipe error",
    /* EUSERS          */ "Too many users",
    /* ENOTSOCK        */ "Socket operation on non-socket",
    /* EDESTADDRREQ    */ "Destination address required",
    /* EMSGSIZE        */ "Message too long",
    /* EPROTOTYPE      */ "Protocol wrong type for socket",
    /* ENOPROTOOPT     */ "Protocol not available",
    /* EPROTONOSUPPORT */ "Protocol not supported",
    /* ESOCKTNOSUPPORT */ "Socket type not supported",
    /* ENOTSUP         */ "Operation not supported",
    /* EPFNOSUPPORT    */ "Protocol family not supported",
    /* EAFNOSUPPORT    */ "Address family not supported by protocol",
    /* EADDRINUSE      */ "Address already in use",
    /* EADDRNOTAVAIL   */ "Cannot assign requested address",
    /* ENETDOWN        */ "Network is down",
    /* ENETUNREACH     */ "Network is unreachable",
    /* ENETRESET       */ "Network dropped connection on reset",
    /* ECONNABORTED    */ "Software caused connection abort",
    /* ECONNRESET      */ "Connection reset by peer",
    /* ENOBUFS         */ "No buffer space available",
    /* EISCONN         */ "Transport endpoint is already connected",
    /* ENOTCONN        */ "Transport endpoint is not connected",
    /* ESHUTDOWN       */ "Cannot send after transport endpoint shutdown",
    /* ETOOMANYREFS    */ "Too many references: cannot splice",
    /* ETIMEDOUT       */ "Connection timed out",
    /* ECONNREFUSED    */ "Connection refused",
    /* EHOSTDOWN       */ "Host is down",
    /* EHOSTUNREACH    */ "No route to host",
    /* EALREADY        */ "Operation already in progress",
    /* EINPROGRESS     */ "Operation now in progress",
    /* ESTALE          */ "Stale file handle",
    /* EUCLEAN         */ "Structure needs cleaning",
    /* ENOTNAM         */ "Not a XENIX named type file",
    /* ENAVAIL         */ "No XENIX semaphores available",
    /* EISNAM          */ "Is a named type file",
    /* EREMOTEIO       */ "Remote I/O error",
    /* EDQUOT          */ "Disk quota exceeded",
    /* ENOMEDIUM       */ "No medium found",
    /* EMEDIUMTYPE     */ "Wrong medium type",
    /* ECANCELED       */ "Operation canceled",
    /* ENOKEY          */ "Required key not available",
    /* EKEYEXPIRED     */ "Key has expired",
    /* EKEYREVOKED     */ "Key has been revoked",
    /* EKEYREJECTED    */ "Key was rejected by service",
    /* EOWNERDEAD      */ "Owner died",
    /* ENOTRECOVERABLE */ "State not recoverable",
    /* ERFKILL         */ "Operation not possible due to RF-kill",
    /* EHWPOISON       */ "Memory page has hardware error",
};

const char *getErrnoString(int num) {
    switch (num) {
        case EPERM:
            return "Operation not permitted";
        case ENOENT:
            return "No such file or directory";
        case ESRCH:
            return "No such process";
        case EINTR:
            return "Interrupted system call";
        case EIO:
            return "Input/output error";
        case ENXIO:
            return "No such device or address";
        case BIG:
            return "Argument list too long";
        case ENOEXEC:
            return "Exec format error";
        case EBADF:
            return "Bad file descriptor";
        case ECHILD:
            return "No child processes";
        case EWOULDBLOCK:
            return "Resource temporarily unavailable";
        case ENOMEM:
            return "Cannot allocate memory";
        case EACCES:
            return "Permission denied";
        case EFAULT:
            return "Bad address";
        case ENOTBLK:
            return "Block device required";
        case EBUSY:
            return "Device or resource busy";
        case EEXIST:
            return "File exists";
        case EXDEV:
            return "Invalid cross-device link";
        case ENODEV:
            return "No such device";
        case ENOTDIR:
            return "Not a directory";
        case EISDIR:
            return "Is a directory";
        case EINVAL:
            return "Invalid argument";
        case ENFILE:
            return "Too many open files in system";
        case EMFILE:
            return "Too many open files";
        case ENOTTY:
            return "Inappropriate ioctl for device";
        case ETXTBSY:
            return "Text file busy";
        case EFBIG:
            return "File too large";
        case ENOSPC:
            return "No space left on device";
        case ESPIPE:
            return "Illegal seek";
        case EROFS:
            return "Read-only file system";
        case EMLINK:
            return "Too many links";
        case EPIPE:
            return "Broken pipe";
        case EDOM:
            return "Numerical argument out of domain";
        case ERANGE:
            return "Numerical result out of range";
        case EDEADLOCK:
            return "Resource deadlock avoided";
        case ENAMETOOLONG:
            return "File name too long";
        case ENOLCK:
            return "No locks available";
        case ENOSYS:
            return "Function not implemented";
        case ENOTEMPTY:
            return "Directory not empty";
        case ELOOP:
            return "Too many levels of symbolic links";
        case ENOMSG:
            return "No message of desired type";
        case EIDRM:
            return "Identifier removed";
        case ECHRNG:
            return "Channel number out of range";
        case NSYNC:
            return "Level 2 not synchronized";
        case HLT:
            return "Level 3 halted";
        case RST:
            return "Level 3 reset";
        case ELNRNG:
            return "Link number out of range";
        case EUNATCH:
            return "Protocol driver not attached";
        case ENOCSI:
            return "No CSI structure available";
        case HLT:
            return "Level 2 halted";
        case EBADE:
            return "Invalid exchange";
        case EBADR:
            return "Invalid request descriptor";
        case EXFULL:
            return "Exchange full";
        case ENOANO:
            return "No anode";
        case EBADRQC:
            return "Invalid request code";
        case EBADSLT:
            return "Invalid slot";
        case EBFONT:
            return "Bad font file format";
        case ENOSTR:
            return "Device not a stream";
        case ENODATA:
            return "No data available";
        case ETIME:
            return "Timer expired";
        case ENOSR:
            return "Out of streams resources";
        case ENONET:
            return "Machine is not on the network";
        case ENOPKG:
            return "Package not installed";
        case EREMOTE:
            return "Object is remote";
        case ENOLINK:
            return "Link has been severed";
        case EADV:
            return "Advertise error";
        case ESRMNT:
            return "Srmount error";
        case ECOMM:
            return "Communication error on send";
        case EPROTO:
            return "Protocol error";
        case EMULTIHOP:
            return "Multihop attempted";
        case EDOTDOT:
            return "RFS specific error";
        case EBADMSG:
            return "Bad message";
        case EOVERFLOW:
            return "Value too large for defined data type";
        case ENOTUNIQ:
            return "Name not unique on network";
        case EBADFD:
            return "File descriptor in bad state";
        case EREMCHG:
            return "Remote address changed";
        case ELIBACC:
            return "Can not access a needed shared library";
        case ELIBBAD:
            return "Accessing a corrupted shared library";
        case ELIBSCN:
            return ".lib section in a.out corrupted";
        case ELIBMAX:
            return "Attempting to link in too many shared libraries";
        case ELIBEXEC:
            return "Cannot exec a shared library directly";
        case EILSEQ:
            return "Invalid or incomplete multibyte or wide character";
        case ERESTART:
            return "Interrupted system call should be restarted";
        case ESTRPIPE:
            return "Streams pipe error";
        case EUSERS:
            return "Too many users";
        case ENOTSOCK:
            return "Socket operation on non-socket";
        case EDESTADDRREQ:
            return "Destination address required";
        case EMSGSIZE:
            return "Message too long";
        case EPROTOTYPE:
            return "Protocol wrong type for socket";
        case ENOPROTOOPT:
            return "Protocol not available";
        case EPROTONOSUPPORT:
            return "Protocol not supported";
        case ESOCKTNOSUPPORT:
            return "Socket type not supported";
        case ENOTSUP:
            return "Operation not supported";
        case EPFNOSUPPORT:
            return "Protocol family not supported";
        case EAFNOSUPPORT:
            return "Address family not supported by protocol";
        case EADDRINUSE:
            return "Address already in use";
        case EADDRNOTAVAIL:
            return "Cannot assign requested address";
        case ENETDOWN:
            return "Network is down";
        case ENETUNREACH:
            return "Network is unreachable";
        case ENETRESET:
            return "Network dropped connection on reset";
        case ECONNABORTED:
            return "Software caused connection abort";
        case ECONNRESET:
            return "Connection reset by peer";
        case ENOBUFS:
            return "No buffer space available";
        case EISCONN:
            return "Transport endpoint is already connected";
        case ENOTCONN:
            return "Transport endpoint is not connected";
        case ESHUTDOWN:
            return "Cannot send after transport endpoint shutdown";
        case ETOOMANYREFS:
            return "Too many references: cannot splice";
        case ETIMEDOUT:
            return "Connection timed out";
        case ECONNREFUSED:
            return "Connection refused";
        case EHOSTDOWN:
            return "Host is down";
        case EHOSTUNREACH:
            return "No route to host";
        case EALREADY:
            return "Operation already in progress";
        case EINPROGRESS:
            return "Operation now in progress";
        case ESTALE:
            return "Stale file handle";
        case EUCLEAN:
            return "Structure needs cleaning";
        case ENOTNAM:
            return "Not a XENIX named type file";
        case ENAVAIL:
            return "No XENIX semaphores available";
        case EISNAM:
            return "Is a named type file";
        case EREMOTEIO:
            return "Remote I/O error";
        case EDQUOT:
            return "Disk quota exceeded";
        case ENOMEDIUM:
            return "No medium found";
        case EMEDIUMTYPE:
            return "Wrong medium type";
        case ECANCELED:
            return "Operation canceled";
        case ENOKEY:
            return "Required key not available";
        case EKEYEXPIRED:
            return "Key has expired";
        case EKEYREVOKED:
            return "Key has been revoked";
        case EKEYREJECTED:
            return "Key was rejected by service";
        case EOWNERDEAD:
            return "Owner died";
        case ENOTRECOVERABLE:
            return "State not recoverable";
        case ERFKILL:
            return "Operation not possible due to RF-kill";
        case EHWPOISON:
            return "Memory page has hardware error";
        default:
            return "Invalid error number";
    }
}

#ifdef __cplusplus
const char *getErrnoString() {
    return getErrnoString(errno);
}
#else
#define errno_str getErrnoString(errno)
#endif
