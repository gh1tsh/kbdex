#!/bin/sh

# Must be from GPG key
export DEBEMAIL="Andrew Crew Kuznetsov <andrewcrew@rambler.ru>"

if !([ -e hunspell-ru-ie-yo_*.orig.tar.gz ]); then
  echo "File hunspell-ru-ie-yo_*.orig.tar.gz is not found.";
  export OLD_VER=0;
else
  export OLD_VER=$(ls hunspell-ru-ie-yo_*.orig.tar.gz | sed -e "s/^hunspell-ru-ie-yo_\(.*\).orig.tar.gz$/\1/");
fi

export LAST_REVISION=$(git rev-list HEAD --count)

echo "Number of last revision: ${LAST_REVISION}"

if [ -z ${LAST_REVISION} ]; then
  echo "Error: number of last revision is empty!";
  exit 0;
fi

echo "Updating is started."
# begin local updating
git pull

export CUR_VER="0.3.9-3"
export NEW_VER="0.3.9-3"

echo "OLD_VER = ${OLD_VER}"
echo "NEW_VER = ${NEW_VER}"

if [ ${NEW_VER} = ${OLD_VER} ]; then
	echo "Upgrading is not required.";
	read -p "You'r rebuild packages (y/N)?" RESP
	
	if [ "$RESP" != y ] ; then
		echo "Rebuilding is not required.";
		exit 0;
	fi
fi

# begin local updating
cp -rf ../"hunspell-ru-ie-yo" ./"hunspell-ru-ie-yo-tmp"

# end local updating

# building to dist
cd ./"hunspell-ru-ie-yo-tmp"
# save debianize settings
mv ./debian ../

mkdir ../"hunspell-ru-ie-yo-${CUR_VER}"
cp ./ru_RU.aff ./ru_RU.dic ../"hunspell-ru-ie-yo-${CUR_VER}"

cd ..
rm -R ./"hunspell-ru-ie-yo-tmp"
# end building

#Create .orig.tar.gz
tar -czf "hunspell-ru-ie-yo_$NEW_VER.orig.tar.gz" "hunspell-ru-ie-yo-${CUR_VER}"

cd "hunspell-ru-ie-yo-${CUR_VER}"
# restore debianize settings
mv ../debian ./

read -p "Build package only on local system (y/N)?" RESPONSE
echo
if [ "$RESPONSE" = y ] ; then
	# If you want to build package on your system uncomment this:
	dch -v "$NEW_VER-mybuild1" "New dictionary update."
	dpkg-buildpackage -rfakeroot

	cd ..
	rm -R ./"hunspell-ru-ie-yo-${NEW_VER}"
else

# Note: I am using gnupg-agent for comfortable work

# begin update for basic releases
dch -b --force-distribution --distribution "xenial" -v "${NEW_VER}-0xenial" \
  "Minor update."
debuild -S -sa
# end update for basic releases

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "wily" -v "${NEW_VER}-0wily" \
  "Automated backport upload; no source changes."
debuild -S -sd

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "vivid" -v "${NEW_VER}-0vivid" \
  "Automated backport upload; no source changes."
debuild -S -sd

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "trusty" -v "${NEW_VER}-0trusty" \
  "Automated backport upload; no source changes."
debuild -S -sd

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "precise" -v "${NEW_VER}-0precise" \
  "Automated backport upload; no source changes."
debuild -S -sd

# end update for other releases

cd ..

echo "Download to Launchpad Xenial..."
dput ppa hunspell-ru-ie-yo_${NEW_VER}-0xenial_source.changes | cat
echo "Download to Launchpad Wily..."
dput ppa hunspell-ru-ie-yo_${NEW_VER}-0wily_source.changes | cat
echo "Download to Launchpad Vivid..."
dput ppa hunspell-ru-ie-yo_${NEW_VER}-0vivid_source.changes | cat
echo "Download to Launchpad Trusty..."
dput ppa hunspell-ru-ie-yo_${NEW_VER}-0trusty_source.changes | cat
echo "Download to Launchpad Precise..."
dput ppa hunspell-ru-ie-yo_${NEW_VER}-0precise_source.changes | cat

rm -R ./"hunspell-ru-ie-yo-${NEW_VER}"
rm -R ./"hunspell-ru-ie-yo-${CUR_VER}"
fi

echo "Update hunspell-ru-ie-yo finished successfully"


